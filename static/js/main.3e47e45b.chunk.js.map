{"version":3,"sources":["img/food.png","img/ground.png","audio/left.mp3","audio/right.mp3","audio/up.mp3","audio/down.mp3","audio/dead.mp3","audio/eat.mp3","components/Snake.js","components/Food.js","context.js","components/Person.js","components/LeaderBoard.js","components/Popup.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Snake","this","props","snakeDots","map","dot","i","style","top","left","className","key","Component","Food","food","src","require","alt","Context","React","createContext","Provider","state","LeaderBoard","rank","name","score","dispatch","action","reducer","before","filter","person","after","length","newPerson","push","forEach","setState","test","value","children","Consumer","Person","width","Popup","finalScore","nameError","onFormSubmit","e","preventDefault","document","getElementsByClassName","display","rsGame","error","height","float","cursor","onClick","len","Fragment","onSubmit","bind","htmlFor","type","classnames","onChange","target","position","randomFood","Math","floor","random","collision","head","array","initialState","direction","speed","last","sound","intervalFlag","interval","flag","inteflg","App","onDirection","window","event","keyCode","play","stopInterval","clearInterval","snakeMovement","dots","newhead","shift","setInterval","onkeydown","collapseCheck","borderCheck","eatCheck","newSnake","unshift","snake","foo","enlarge","speedUpSnake","pop","gameOver","console","log","restartGame","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3e47e45b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/food.ebfaf8ca.png\";","module.exports = __webpack_public_path__ + \"static/media/ground.103334eb.png\";","module.exports = __webpack_public_path__ + \"static/media/left.efd1952f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/right.de8d6dfb.mp3\";","module.exports = __webpack_public_path__ + \"static/media/up.58c06899.mp3\";","module.exports = __webpack_public_path__ + \"static/media/down.3da54fb7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/dead.f2594749.mp3\";","module.exports = __webpack_public_path__ + \"static/media/eat.ead74d92.mp3\";","import React, { Component } from 'react';\n\nexport default class Snake extends Component {\n  render() {\n    return (\n      <div>\n        {this.props.snakeDots.map((dot, i) => {\n          const style = { top: `${dot[1]}px`, left: `${dot[0]}px` };\n          return <div className=\"snake-part\" key={i} style={style}></div>;\n        })}\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nfunction Food(props) {\n  const { food } = props;\n  const style = {\n    top: `${food[1]}px`,\n    left: `${food[0]}px`,\n  };\n  return <img src={require(\"../img/food.png\")} className=\"snake-food\" style={style} alt=\"Food\"></img>;\n}\n\nexport default Food;\n","import React, { Component } from 'react';\n\nconst Context = React.createContext();\n\nexport class Provider extends Component {\n  state = {\n    LeaderBoard: [\n      {\n        rank: 1,\n        name: 'John',\n        score: 99,\n      },\n      {\n        rank: 2,\n        name: 'Doe',\n        score: 80,\n      },\n      {\n        rank: 3,\n        name: 'James',\n        score: 50,\n      },\n    ],\n    dispatch: (action) => this.reducer(action),\n  };\n\n// reducer to add a person to the LeaderBoard\n  reducer = (action) => {\n    let { name, score } = action;\n    const before = this.state.LeaderBoard.filter((person) => {\n      return person.score >= score;\n    });\n    const after = this.state.LeaderBoard.filter((person) => {\n      return person.score < score;\n    });\n    let i = before.length + 1;\n    after.map((person) => {\n      person.rank += 1;\n    });\n    const newPerson = {\n      rank: i,\n      name,\n      score,\n    };\n    before.push(newPerson);\n    after.forEach((person) => before.push(person));\n    this.setState(this.state.LeaderBoard = before);\n\n  };\n\n  //testing if reducer is working.\n  test = this.state.dispatch({\n    name: 'moin',\n    score: 60,\n  });\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React from 'react';\n\nfunction Person(props) {\n  const { rank, name, score } = props;\n  return (\n    <div className=\"card-group\">\n      <div className=\"card\">\n        <p className=\"card-text p-2\">{rank}</p>\n      </div>\n      <div className=\"card\">\n        <p className=\"card-text p-2\">{name}</p>\n      </div>\n      <div className=\"card\">\n        <p className=\"card-text p-2\">{score}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Person;\n","import React, { Component } from 'react';\nimport { Consumer } from '../context';\nimport Person from './Person';\n\nclass LeaderBoard extends Component {\n  render() {\n    return (\n      <Consumer>\n        {(value) => {\n          const { LeaderBoard } = value;\n          return (\n            <div style={{ width: '50%' }} >\n            <div className=\"container\">\n              <h2>Controls:<img className=\"ml-3\" width='80px' src=\"https://www.pngkit.com/png/full/179-1791596_wasd-keys-png-wasd-keys.png\" alt=\"contollers\"/></h2>\n            </div>\n            <div className=\"leaderboard mt-4\">\n              <div className=\"card\">\n                <div className=\"card-header text-center display-4\">Leaderboard</div>\n                <div className=\"card-body text-center\">\n                  <div className=\"card-group\">\n                    <div className=\"card\">\n                      <div className=\"card-header text-uppercase font-weight-normal\">Rank</div>{' '}\n                    </div>\n                    <div className=\"card\">\n                      <div className=\"card-header text-uppercase font-weight-normal\">Name</div>{' '}\n                    </div>\n                    <div className=\"card\">\n                      <div className=\"card-header text-uppercase font-weight-normal\">Score</div>{' '}\n                    </div>\n                  </div>\n                  {LeaderBoard.map((person) => (\n                    <Person\n                      key={person.rank}\n                      name={person.name}\n                      rank={person.rank}\n                      score={person.score}\n                    ></Person>\n                  ))}\n                </div>\n              </div>\n            </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default LeaderBoard;\n","import React, { Component } from 'react';\nimport { Consumer } from '../context';\nimport classnames from 'classnames';\n\nexport default class Popup extends Component {\n  state = {\n    name: '',\n    finalScore: 0,\n    nameError: {},\n  };\n\n  onFormSubmit = (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, finalScore } = this.state;\n    if (name === '') {\n      this.setState({\n        nameError: { name: 'Name is required' },\n      });\n      return;\n    }\n    const action = {\n      name,\n      score: finalScore,\n    };\n    dispatch(action);\n    document.getElementsByClassName('popup')[0].style.display = 'none';\n    this.setState({\n      name: '',\n      finalScore: 0,\n      nameError: '',\n    });\n    this.props.rsGame();\n  };\n\n  componentDidUpdate() {\n    var { score } = this.props;\n    if (score > this.state.finalScore) {\n      this.setState({ finalScore: score });\n    }\n    if (score < this.state.finalScore) {\n      this.setState({ finalScore: score });\n    }\n  }\n\n  render() {\n    const { name, finalScore, nameError } = this.state;\n    const error = nameError.name;\n    var { score, rsGame } = this.props;\n    return (\n      <div className=\"popup rounded\">\n        <div\n          className=\"card text-center\"\n          style={{ width: '100%', height: '100%' }}\n        >\n          <div className=\"card-header text-center bg-dark text-light\">\n            Game Over!\n            <i\n              className=\"fas fa-times text-danger\"\n              style={{ float: 'right', cursor: 'pointer' }}\n              onClick={() => {\n                var x = document.getElementsByClassName('popup')[0];\n                x.style.display = 'none';\n                rsGame();\n              }}\n            ></i>\n          </div>\n          <div className=\"card-body\" style={{ height: '100%' }}>\n            <Consumer>\n              {(value) => {\n                const { LeaderBoard, dispatch } = value;\n                var len = LeaderBoard.length;\n                return (\n                  <React.Fragment>\n                    {(len <= 10 || LeaderBoard[len - 1] < finalScore) &&\n                    score !== 0 ? (\n                      <div>\n                        <h4>You have made it to the LeaderBoard!</h4>\n                        <p>Score : {finalScore}</p>\n                        <form\n                          className=\"form-popup form-group\"\n                          onSubmit={this.onFormSubmit.bind(this, dispatch)}\n                        >\n                          <label htmlFor=\"name\" className=\"text-left\">\n                            Enter to your name:\n                          </label>\n                          <input\n                            name=\"name\"\n                            type=\"text\"\n                            className={classnames(\n                              'form-control form-control-lg mb-3',\n                              {\n                                'is-invalid': error,\n                              }\n                            )}\n                            value={name}\n                            onChange={(e) => {\n                              this.setState({ name: e.target.value });\n                            }}\n                          ></input>\n                          {error && (\n                            <div className=\"invalid-feedback\">{error}</div>\n                          )}\n\n                          <input\n                            type=\"submit\"\n                            value=\"Submit\"\n                            style={{\n                              width: '50%',\n                              position: 'relative',\n                              left: '25%',\n                            }}\n                          ></input>\n                          <p>\n                            <strong>Note: </strong> After you close this popup\n                            or Submit your details , press any control to\n                            restart the Game{' '}\n                          </p>\n                        </form>\n                      </div>\n                    ) : (\n                      <div style={{ height: '120%' }}>\n                        <h4>Score : {score}</h4>\n                        <p>Try Again.</p>\n                        <button\n                          value=\"OK\"\n                          onClick={() => {\n                            var x = document.getElementsByClassName('popup')[0];\n                            x.style.display = 'none';\n                            rsGame();\n                          }}\n                        >\n                          {' '}\n                          Click Here\n                        </button>\n                        <p>\n                          <strong>Note: </strong> After you close this popup or\n                          pressed \"Click Here\" button , press any control to\n                          restart the Game{' '}\n                        </p>\n                      </div>\n                    )}\n                  </React.Fragment>\n                );\n              }}\n            </Consumer>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport Snake from './components/Snake';\nimport Food from './components/Food';\nimport { Provider } from './context';\nimport LeaderBoard from './components/LeaderBoard';\nimport Popup from './components/Popup';\n\nconst box = 32;\n// a function that gives food at a random space\nconst randomFood = () => {\n  const min = 3,\n    max = 17;\n  const x = Math.floor(Math.random() * (max - min + 1) + min) * box;\n  const y = Math.floor(Math.random() * (max - min + 1) + min) * box;\n  return [x, y];\n};\n// this if for the food not to coincide with the body of snake\nconst collision = (head, array) => {\n  for (let i = 0; i < array.length; i++) {\n    if (head[0] === array[i][0] && head[1] === array[i][1]) {\n      return true;\n    }\n  }\n  return false;\n};\n// this is the initial state of the snake\nconst initialState = {\n  food: randomFood(),\n  direction: '',\n  speed: 200,\n  snakeDots: [\n    [4 * box, 10 * box],\n    [5 * box, 10 * box],\n    [6 * box, 10 * box],\n  ],\n  last: '',\n  score: 0,\n  sound: null,\n};\n\n// flags to stop and restart game\nvar intervalFlag = 0;\nvar interval = null;\nvar flag = 0;\nvar inteflg = 1;\n\nclass App extends Component {\n  state = initialState;\n\n  // this runs after the document is ready\n  componentDidMount() {\n    interval = setInterval(this.snakeMovement, this.state.speed);\n    document.onkeydown = this.onDirection;\n  }\n\n  shouldComponentUpdate() {\n    if (intervalFlag === 1) {\n      if (flag === 0) {\n        this.setState(initialState);\n        flag = 1;\n        inteflg = 0;\n        this.stopInterval();\n      }\n      return false;\n    } else {\n      flag = 0;\n      if (inteflg === 0) {\n        this.setState(initialState);\n        interval = setInterval(this.snakeMovement, this.state.speed);\n        inteflg = 1;\n      }\n      return true;\n    }\n  }\n  // this runs if there is a change in state\n  componentDidUpdate() {\n    this.collapseCheck();\n    this.borderCheck();\n    this.eatCheck();\n  }\n  // this triggers when an event on keyboard occurs\n  onDirection = (e) => {\n    e = e || window.event;\n    let key = e.keyCode;\n    if (\n      key === 65 &&\n      this.state.last !== 'RIGHT' &&\n      this.state.last !== 'LEFT'\n    ) {\n      this.setState({ direction: 'LEFT' });\n      this.sound = document.getElementsByClassName('left')[0];\n      this.sound.play();\n      this.setState({ last: 'LEFT' });\n    } else if (\n      key === 87 &&\n      this.state.last !== 'DOWN' &&\n      this.state.last !== 'UP'\n    ) {\n      this.setState({ direction: 'UP' });\n      this.sound = document.getElementsByClassName('up')[0];\n      this.sound.play();\n      this.setState({ last: 'UP' });\n    } else if (\n      key === 68 &&\n      this.state.last !== 'LEFT' &&\n      this.state.last !== 'RIGHT'\n    ) {\n      this.setState({ direction: 'RIGHT' });\n      this.sound = document.getElementsByClassName('right')[0];\n      this.sound.play();\n      this.setState({ last: 'RIGHT' });\n    } else if (\n      key === 83 &&\n      this.state.last !== 'UP' &&\n      this.state.last !== 'DOWN'\n    ) {\n      this.setState({ direction: 'DOWN' });\n      this.sound = document.getElementsByClassName('down')[0];\n      this.sound.play();\n      this.setState({ last: 'DOWN' });\n    }\n  };\n\n  stopInterval = () => {\n    clearInterval(interval);\n  };\n\n  //tells the snake to move in a particular directin\n  snakeMovement = () => {\n    let dots = [...this.state.snakeDots];\n    let newhead = dots[dots.length - 1];\n    if (this.state.direction !== '') {\n      switch (this.state.direction) {\n        case 'RIGHT':\n          newhead = [newhead[0] + box, newhead[1]];\n          break;\n        case 'LEFT':\n          newhead = [newhead[0] - box, newhead[1]];\n          break;\n        case 'UP':\n          newhead = [newhead[0], newhead[1] - box];\n          break;\n        case 'DOWN':\n          newhead = [newhead[0], newhead[1] + box];\n          break;\n        default:\n          break;\n      }\n      dots.push(newhead);\n      dots.shift();\n      this.setState({\n        snakeDots: dots,\n      });\n    }\n  };\n  // to enlarge snake\n  enlarge() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([]);\n    this.setState({\n      snakeDots: newSnake,\n    });\n  }\n  // to speedup snake after eating/ enlarging\n  speedUpSnake() {\n    if (this.state.speed > 10) {\n      this.setState({\n        speed: this.state.speed - 10,\n      });\n    }\n  }\n  eatCheck() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n    let food = this.state.food;\n    if (head[0] === food[0] && head[1] === food[1]) {\n      document.getElementsByClassName('eat')[0].play();\n      let foo = randomFood();\n      while (collision(foo, snake)) foo = randomFood();\n      this.setState({\n        food: foo,\n        score: this.state.score + 1,\n      });\n      this.enlarge();\n      this.speedUpSnake();\n    }\n  }\n  //if snake encounters itself\n  collapseCheck() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach((dot) => {\n      if (head[0] === dot[0] && head[1] === dot[1]) {\n        this.gameOver();\n      }\n    });\n  }\n  //if snake encounters borders\n  borderCheck() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    if (\n      head[0] > 17 * box ||\n      head[1] < 3 * box ||\n      head[0] < box ||\n      head[1] > 17 * box\n    ) {\n      document.getElementsByClassName('dead')[0].play();\n      this.gameOver();\n    }\n  }\n  gameOver() {\n    var x = document.getElementsByClassName('popup')[0];\n    x.style.display = 'flex';\n    intervalFlag = 1;\n    this.setState(initialState);\n  }\n  restartGame() {\n    console.log('fired');\n    intervalFlag = 0;\n  }\n  render() {\n    const { snakeDots, food, score } = this.state;\n    const rsGame = this.restartGame;\n    return (\n      <Provider>\n        <Router>\n          <Route exact path=\"/\">\n            <React.Fragment>\n              <div className=\"display-4 text-center\">Snake Game</div>\n              <div className=\"mt-4 playground\">\n                <div className=\"ground\">\n                  <h5 className=\"score\">Score: {score}</h5>\n                  <div className=\"snake-playground\">\n                    <img\n                      src={require('./img/ground.png')}\n                      alt=\"img\"\n                      className=\"background\"\n                    ></img>\n                    <Snake snakeDots={snakeDots}></Snake>\n                    <Food food={food}></Food>\n                  </div>\n                </div>\n                <LeaderBoard></LeaderBoard>\n              </div>\n              <audio className=\"left\">\n                <source\n                  src={require('./audio/left.mp3')}\n                  type=\"audio/mp3\"\n                ></source>\n              </audio>\n              <audio className=\"right\">\n                <source\n                  src={require('./audio/right.mp3')}\n                  type=\"audio/mp3\"\n                ></source>\n              </audio>\n              <audio className=\"up\">\n                <source\n                  src={require('./audio/up.mp3')}\n                  type=\"audio/mp3\"\n                ></source>\n              </audio>\n              <audio className=\"down\">\n                <source\n                  src={require('./audio/down.mp3')}\n                  type=\"audio/mp3\"\n                ></source>\n              </audio>\n              <audio className=\"dead\">\n                <source\n                  src={require('./audio/dead.mp3')}\n                  type=\"audio/mp3\"\n                ></source>\n              </audio>\n              <audio className=\"eat\">\n                <source\n                  src={require('./audio/eat.mp3')}\n                  type=\"audio/mp3\"\n                ></source>\n              </audio>\n              <Popup\n                score={score}\n                intervalFlag={intervalFlag}\n                rsGame={rsGame}\n              ></Popup>\n            </React.Fragment>\n          </Route>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}